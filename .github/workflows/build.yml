name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Stamp artifact with commit hash
        run: |
          jar=$(ls target/*.jar | head -1)
          hash=$(git rev-parse --short "$GITHUB_SHA")
          mv "$jar" "target/$(basename "$jar" .jar)-$hash.jar"

      - name: List packaged jars for debug
        run: ls -la target               # Verificar que existen los JAR :contentReference[oaicite:11]{index=11}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: target/*.jar             # Coincide con cualquiera de los JAR generados :contentReference[oaicite:12]{index=12}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: artifacts

      - name: List downloaded jars for debug
        run: ls -la artifacts            # Confirmar la presencia del .jar :contentReference[oaicite:13]{index=13}

      - name: Deploy to CloudHub
        env:
          anypoint_username: ${{ secrets.anypoint_platform_username }}
          anypoint_password: ${{ secrets.anypoint_platform_password }}
        run: |
          artifact=$(ls artifacts/*.jar | head -1)
          # El flag -DmuleDeploy activa la secci√≥n <cloudhub2Deployment> en el POM :contentReference[oaicite:2]{index=2}
          mvn -B deploy -DmuleDeploy \
              -Danypoint.username="$anypoint_username" \
              -Danypoint.password="$anypoint_password" \
              --file pom.xml
